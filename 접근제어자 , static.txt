생성자

(default) class 생성자 : 같은 패키지 내에서만사용가능 외부에서 사용 x 괄호안에 있는건 생략해야된다 그래서
그냥 class{
}
이렇게 생성된다

public class : 내부 외부에서 다 사용가능

클래스에서 - = private
              + = public 

-, + 이건 연산자가 아니라 클래스에선 틸트라고 부른다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

static

1) 공유 메모리 영역 ( 또는 정적 메모리 영역) 이라고 함

-> 프로그램 시작 시 static이 붙은 코드들이 모두
static 영역에 생성되고,
프로그램이 종료될 때 까지 사라지지 않음(정적)

그리고 static 영역에 생성된 변수는 어디서든지 공유 가능 (공유)

사용 법 : static 이 생성된 클래스명.변수명 ex ) Student.schoolName

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
[접근 제한자] [예약어] 자료형 변수명 

대괄호는 생락 가능

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Student std - new Student() < Student() : 생성자 

이건 메서드 새롭게 생성된 것을 실행하는 것

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

생성자는 적지않으면 개발자가 자동적으로 생기게 만들어놧다

하지만 && 매개변수생성자를쓰면 자동적으로 기본 생성자를 생기지 않게 해줫으므로

매개변수생성자를 쓰면 기본생성자도 작성해줘야한다


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

오버로딩 ? 한 클래스 내에 같은 메소드 이름을 여러 개 작성하는 기법

조건 : 같은 메소드 이름 , 다른 매개변수의 개수 또는 다른매개변수 타입, 순서를 가지고 있어야한다

return 타입은 같아도 되고 달라도 된다.

매개변수명은 신경쓰지않음.





















