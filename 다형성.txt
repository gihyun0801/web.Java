업캐스팅

자식이 부모가 된다

다운캐스팅

부모가 자식이된다

ㅡ,ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

부모 객체에 자식객체를 넣으면 자식객체가 부모 객체가 된다 : 업캐스팅

업캐스팅 : 자식이 부모 흉내를 내는것

업캐스팅을 하면 부모 흉내를 내고 잇는 자식은 자기자신만의 필드를 사용하지 못하게된다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

다운 캐스팅은 업캐스팅 상태에서만 진행 가능

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

abstract 추상 클래스 특징

추상 메서드 = {} 가없는 얘

1.객체 생성 불가
2.추상 메서드 가 하나라도 있으면 클래스도 추상 클래스가 되어서 abstract 를 써줘야한다 예약어에
3.abstract 클래스로 만들엇는데 그 안에 추상 메서드가 하나라도 없는건 괜찮다
4.클래스에 내에 일반 변수, 메소드 포함 가능
5.객체 생성은 안되지만 부모 타입으로는 사용 가능



추상 클래스 안에 있는 추상 메서드 가 있는데

만약 추상 클래스가 부모일때

자식 클래스는 부모 추상 클래스에 있는 추상 메서드를 강제 오버라이딩 해야된다 

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

인터페이스

추상 클래스 보다 설계기준이 엄격 

일반메서드 못씀 설계만 가능 상수형만 가능 상수 = final

메서드도 추상 메서드만 가능

클래스가 공통적으로 가져야하는 필드, 메서드를 모아두고 상속
























